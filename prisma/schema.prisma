// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  userNumber Int @default(autoincrement())
  email     String   @unique
  emailHash     String   @unique
  name      String?
  nameHash      String?
  teslaAccountId   String?   @unique
  teslaVaultId   String?
  region String
  emailSendTo String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessions  UserSession[]
  chargingSessions ChargingSession[]
  termsAndConditionsVersion String?
  termsAndConditionsAcceptedAt DateTime?
  firstDownloadCompletedAt DateTime?
}

model UserSession {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  accessToken String
  refreshToken String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChargingSession {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  sessionId Int
  vin String?
  siteLocationName String?
  chargeStartDateTime DateTime?
  chargeStopDateTime DateTime?
  unlatchDateTime DateTime?
  countryCode String?
  billingType String?
  vehicleMakeType String?
  fees ChargingFee[]
  invoices ChargingInvoice[]
}

model ChargingFee {
  id        String   @id @default(uuid())
  chargingSessionId String
  chargingSession ChargingSession @relation(fields: [chargingSessionId], references: [id], onDelete: Cascade)
  feeType String
  currencyCode String
  pricingType String
  rateBase Float
  rateTier1 Float
  rateTier2 Float
  rateTier3 Float?
  rateTier4 Float?
  usageBase Float
  usageTier1 Float
  usageTier2 Float
  usageTier3 Float?
  usageTier4 Float?
  totalBase Float
  totalTier1 Float
  totalTier2 Float
  totalTier3 Float?
  totalTier4 Float?
  totalDue Float
  netDue Float
  uom String?
  isPaid Boolean
  status String?
}

model ChargingInvoice {
  id        String   @id @default(uuid())
  chargingSessionId String
  chargingSession ChargingSession @relation(fields: [chargingSessionId], references: [id], onDelete: Cascade)
  contentId String
  fileName String
  invoiceType String
}
